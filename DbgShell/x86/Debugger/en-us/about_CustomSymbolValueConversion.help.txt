
TOPIC
    about_CustomSymbolValueConversion

SHORT DESCRIPTION

    DbgShell lets you get symbol values as nice objects. This is extremely powerful for
    scripting. You can customize how these symbol value objects are created.

LONG DESCRIPTION

    For most objects, the stock object given to you by DbgShell is fine, but some objects
    are very painful to deal with in "raw" form--most notably STL containers, but many
    others as well. So DbgShell has a generic "custom symbol value conversion" facility,
    which lets you register some little snippet of script to take a stock symbol value
    object and turn it into something more useful. You can add properties or methods,
    modify existing members, or create an entirely new object.

    DbgShell comes with a few of these little conversion snippets, including some for
    dealing with STL containers: 

    STL symbol value type		    Gets tranformed into a .NET object of this type
    =====================           ===============================================
    std::string, std::wstring  ==>  System.String
    std::vector<*>             ==>  System.Collections.ObjectModel.ReadOnlyCollection
    std::map<*>                ==>  System.Collections.ObjectModel.ReadOnlyDictionary
    std::set<*>                ==>  System.Collections.ObjectModel.ReadOnlyCollection


    For more information, please see the MarkDown help file "SymbolValueConversion.md" in
    the "doc" folder at the root of the DbgShell installation.


ADDITIONAL HELP TOPICS

    Get-Help about_HowTo_Write_a_Symbol_Value_Converter


QUESTIONS/FEEDBACK

    TBD:github link

